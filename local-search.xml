<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用vps实现科学上网</title>
    <link href="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <url>/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文最后更新于：2022年3月21日 晚上</p></blockquote><p>伟大的教员曾说过：自己动手丰衣足食。相信每个人都有一个实现科学上网自由的梦想，今天我就来教大家如何从零搭建一台属于自己的梯子，让你科学上网不再求人！OK，Let's begin</p><span id="more"></span><h2 id="一准备工作">一、准备工作</h2><h3 id="v2rayn客户端下载windows">1. v2rayN客户端下载（windows）</h3><p>下载方式一：GitHub</p><p>【v2rayN.exe Release】：<a href="https://github.com/v2ray/v2ray-core/releases">v2rayN Download</a></p><p>解压【【点击 v2rayN.exe 启动】】</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/v2ray.exe.png"></p><h3 id="购买vps服务器">2. 购买vps服务器</h3><p>推荐购买国外的vps服务器，这里博主使用GitHub学生礼包购买的digital ocean的vps服务器，$5/month</p><p>【1. 系统镜像选择Ubuntu即可】</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vps_1.jpg"></p><p>【2. vps选择最低配即可，每月5刀】</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vps_2.jpg"></p><p>【3. 服务器地址选择根据个人情况，这里博主选择的是洛杉矶】</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vps_3.jpg"></p><p>【4. 配置选择完成后，便可以创建服务器】</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vps_4.jpg"></p><h2 id="二连接服务器">二、连接服务器</h2><p>连接服务器有多种途径，可以通过xshell进行远程连接，博主这里选择通过digital ocean提供的接口进行网页连接</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vps_5.jpg"></p><p>【连接成功！！！】</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vps_sucess.jpg"></p><h2 id="三搭建梯子">三、搭建梯子</h2><p>由于刚购置Linux没有进行配置，所以需要大家先安装crul进行配置，复制命令粘贴按确认即可</p><p>【ubuntu/debian 系统安装 Curl 方法:】</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">apt-get update -y &amp;&amp; apt-get install curl -y<br></code></pre></td></tr></table></figure><p>【centos 系统安装 Curl 方法:】</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">yum update -y &amp;&amp; yum install curl -y<br></code></pre></td></tr></table></figure><p>下载完成后运行如下命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">bash &lt;(curl -s -L https:<span class="hljs-comment">//git.io/v2rayinstall.sh)</span><br></code></pre></td></tr></table></figure><p>按照步骤安装即可（如果不清楚都选择<strong>默认</strong>），得到如下界面则说明安装成功</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/install.jpg"></p><p>输入【v2ray url】可以得到一串vmess链接，将其复制到客户端即可</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/vmess.png"></p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/connect.jpg"></p><h2 id="四v2ray提速">四、v2ray提速</h2><p>安装bbr</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/bbr.png"></p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/bbr1.png"></p><h2 id="五搭建成功效果">五、搭建成功效果</h2><p>ok，成功登陆Google and YouTube ！！！</p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/google.jpg"></p><p><img src="/2022/03/14/%E5%88%A9%E7%94%A8vps%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/youtube.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>科学上网</tag>
      
      <tag>梯子</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Python的UCAS课程网站课件下载程序</title>
    <link href="/2022/01/22/%E5%9F%BA%E4%BA%8EPython%E7%9A%84UCAS%E8%AF%BE%E7%A8%8B%E7%BD%91%E7%AB%99%E8%AF%BE%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%A8%8B%E5%BA%8F/"/>
    <url>/2022/01/22/%E5%9F%BA%E4%BA%8EPython%E7%9A%84UCAS%E8%AF%BE%E7%A8%8B%E7%BD%91%E7%AB%99%E8%AF%BE%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文最后更新于：2022年1月22日凌晨</p></blockquote><p>由于<a href="http://sep.ucas.ac.cn/">UCAS</a>的课程网站无法进行批量下载课件（太反人类了），本人写了一个爬虫小程序，只需手动输入用户名、密码、验证码，即可实现课件的自动下载，解放双手。</p><span id="more"></span><h2 id="依赖库">1. 依赖库</h2><ul><li>requests</li><li>BeautifulSoup4</li><li>Image</li><li>os</li></ul><h2 id="基本思路">2. 基本思路</h2><p>使用requests库请求得到网页内容，BeautifulSoup 解析网页内容。验证码原本打算采用tesseract库进行OCR识别，但无奈识别效果不佳（有空再研究研究），最终选择人工输入验证码。</p><p><img src="/2022/01/22/%E5%9F%BA%E4%BA%8EPython%E7%9A%84UCAS%E8%AF%BE%E7%A8%8B%E7%BD%91%E7%AB%99%E8%AF%BE%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%A8%8B%E5%BA%8F/sep.png"></p><h2 id="演示效果">3. 演示效果</h2><p><img src="/2022/01/22/%E5%9F%BA%E4%BA%8EPython%E7%9A%84UCAS%E8%AF%BE%E7%A8%8B%E7%BD%91%E7%AB%99%E8%AF%BE%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%A8%8B%E5%BA%8F/show.gif"></p><h2 id="代码展示">4. 代码展示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">project： 基于Python的UCAS课程网站课件下载程序</span><br><span class="hljs-string">author: Northfourta</span><br><span class="hljs-string">dependent libraries:</span><br><span class="hljs-string">    1. requests;</span><br><span class="hljs-string">    2. BeautifulSoup4;</span><br><span class="hljs-string">    3. Image;</span><br><span class="hljs-string">    4. os</span><br><span class="hljs-string">date: 2022/01/22</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ucas_Crawler</span>:</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    基于Python的UCAS课程网站课件下载程序</span><br><span class="hljs-string">    &#x27;&#x27;&#x27;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, certCode_url, post_url, logined_url</span>):</span><br>        self.certCode_url = certCode_url<br>        self.post_url = post_url<br>        self.logined_url = logined_url<br>        self.session = requests.Session() <span class="hljs-comment"># 创建一个session会话</span><br>        self.headers = &#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36(KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&#x27;</span><br>        &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_certCode</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        得到验证码</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        <span class="hljs-comment"># 获得验证码图片</span><br>        codePic = self.session.get(self.certCode_url, headers=self.headers)<br>        <span class="hljs-comment"># 将验证码图片存到本地</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;codePic.jpg&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(codePic.content)<br>            f.close()<br>        <span class="hljs-comment"># 读取图片</span><br>        img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;codePic.jpg&#x27;</span>)<br>        img.show()<br>        certCode = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入验证码：&#x27;</span>)<br>        <span class="hljs-keyword">return</span> certCode<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login_in</span>(<span class="hljs-params">self, certCode</span>):</span><br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        登陆网站</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入用户名：&#x27;</span>)<br>        pwd = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入密码：&#x27;</span>)<br>        post_data = &#123;   <span class="hljs-comment"># 提交表单</span><br>            <span class="hljs-string">&#x27;userName&#x27;</span>: name,<br>            <span class="hljs-string">&#x27;pwd&#x27;</span>: pwd,<br>            <span class="hljs-string">&#x27;certCode&#x27;</span>: certCode,<br>            <span class="hljs-string">&#x27;sb&#x27;</span>: <span class="hljs-string">&#x27;sb&#x27;</span><br>        &#125;<br>        self.session.post(url=self.post_url, data=post_data, headers=self.headers) <span class="hljs-comment"># 提交表单，模拟登陆</span><br>        login_page = self.session.get(url=self.logined_url, headers=self.headers)  <span class="hljs-comment"># 获取登陆后页面信息</span><br>        soup_login = BeautifulSoup(login_page.text, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>        <span class="hljs-keyword">if</span> login_page.status_code == <span class="hljs-number">200</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;sep登陆成功！&#x27;</span>)<br>            <span class="hljs-comment"># 解析获取课程网站所在页面网址</span><br>            portal_url = <span class="hljs-string">&#x27;http://sep.ucas.ac.cn&#x27;</span> + soup_login.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;课程网站&#x27;</span>&#125;)[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;href&#x27;</span>]<br>        <span class="hljs-keyword">return</span> portal_url<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Course_Info</span>(<span class="hljs-params">self, portal_url</span>):</span><br>        <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">        获取选课信息</span><br><span class="hljs-string">        &#x27;&#x27;&#x27;</span><br>        response = self.session.get(portal_url, headers=self.headers)<br>        url = BeautifulSoup(response.content, <span class="hljs-string">&#x27;html.parser&#x27;</span>).find_all(name = <span class="hljs-string">&#x27;h4&#x27;</span>)[<span class="hljs-number">0</span>].a[<span class="hljs-string">&#x27;href&#x27;</span>]<br>        soup = BeautifulSoup(self.session.get(url=url, headers=self.headers).content, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>        url_course = soup.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;我的课程 - 查看或加入站点&#x27;</span>&#125;)[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;href&#x27;</span>]<br>        re = BeautifulSoup(self.session.get(url_course, headers=self.headers).content, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>        list_course = re.find_all(name=<span class="hljs-string">&#x27;tr&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你当前已选课程如下：\n -----------------------------------------------&#x27;</span>)<br>        i = <span class="hljs-number">0</span><br>        url_course = []  <span class="hljs-comment"># 对应课程的链接网址</span><br>        name_course = []<br>        <span class="hljs-keyword">for</span> course <span class="hljs-keyword">in</span> list_course:<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(course.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_top&#x27;</span>&#125;)) &gt; <span class="hljs-number">0</span>:<br>                i += <span class="hljs-number">1</span><br>                content = course.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_top&#x27;</span>&#125;)[<span class="hljs-number">0</span>]<br>                <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&#x27;. &#x27;</span> + content[<span class="hljs-string">&#x27;title&#x27;</span>].split(<span class="hljs-string">&#x27; &#x27;</span>)[-<span class="hljs-number">1</span>])<br>                name_course.append(content[<span class="hljs-string">&#x27;title&#x27;</span>].split(<span class="hljs-string">&#x27; &#x27;</span>)[-<span class="hljs-number">1</span>])<br>                url_course.append(content[<span class="hljs-string">&#x27;href&#x27;</span>])<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-----------------------------------------------&#x27;</span>)<br>        <span class="hljs-keyword">return</span> url_course, name_course<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">download_file</span>(<span class="hljs-params">self, url_courses, name_courses</span>):</span><br>        string = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入想要更新课件资源的课程编号（如选择多门课程，请使用空格间隔）：&#x27;</span>)<br>        dirs = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入想要将资源下载到的位置（形式：”D:\\Release\\bin“）：&#x27;</span>)<br>        sect_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, string.split(<span class="hljs-string">&#x27; &#x27;</span>)))<br>        <span class="hljs-keyword">for</span> sect <span class="hljs-keyword">in</span> sect_list:<br>            <span class="hljs-built_in">dir</span> = dirs + <span class="hljs-string">&#x27;\\&#x27;</span> + name_courses[sect-<span class="hljs-number">1</span>]<br>            <span class="hljs-comment"># 判断目录是否存在,不存在则创建目录</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-built_in">dir</span>):<br>                os.makedirs(<span class="hljs-built_in">dir</span>)<br>            current_course = BeautifulSoup(self.session.get(url_courses[sect-<span class="hljs-number">1</span>], headers=self.headers).content, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>            url_course = current_course.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;资源 - 上传、下载课件，发布文档，网址等信息&#x27;</span>&#125;)[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;href&#x27;</span>]<br>            resource = BeautifulSoup(self.session.get(url_course, headers=self.headers).text, <span class="hljs-string">&#x27;lxml&#x27;</span>)<br>            <span class="hljs-comment"># 下载所有的ppt</span><br>            <span class="hljs-keyword">for</span> ppt <span class="hljs-keyword">in</span> resource.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;PowerPoint &#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_self&#x27;</span>&#125;):<br>                link = ppt[<span class="hljs-string">&#x27;href&#x27;</span>]<br>                <span class="hljs-keyword">try</span>:<br>                    filename = <span class="hljs-built_in">dir</span> + <span class="hljs-string">&#x27;\\&#x27;</span> + ppt.find(name=<span class="hljs-string">&#x27;span&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;hidden-sm hidden-xs&#x27;</span>&#125;).string<br>                    <span class="hljs-built_in">print</span>(filename)<br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                        f.write(self.session.get(link, headers=self.headers).content)<br>                    f.close()<br>                <span class="hljs-keyword">except</span> AttributeError:<br>                    <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">for</span> ppt <span class="hljs-keyword">in</span> resource.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;Power Point&#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_self&#x27;</span>&#125;):<br>                link = ppt[<span class="hljs-string">&#x27;href&#x27;</span>]<br>                <span class="hljs-keyword">try</span>:<br>                    filename = <span class="hljs-built_in">dir</span> + <span class="hljs-string">&#x27;\\&#x27;</span> + ppt.find(name=<span class="hljs-string">&#x27;span&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;hidden-sm hidden-xs&#x27;</span>&#125;).string<br>                    <span class="hljs-built_in">print</span>(filename)<br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                        f.write(self.session.get(link, headers=self.headers).content)<br>                    f.close()<br>                <span class="hljs-keyword">except</span> AttributeError:<br>                    <span class="hljs-keyword">continue</span><br>            <span class="hljs-comment"># 下载所有pdf</span><br>            <span class="hljs-keyword">for</span> pdf <span class="hljs-keyword">in</span> resource.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;PDF&#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_blank&#x27;</span>&#125;):<br>                link = pdf[<span class="hljs-string">&#x27;href&#x27;</span>]<br>                <span class="hljs-keyword">try</span>:<br>                    filename = <span class="hljs-built_in">dir</span> + <span class="hljs-string">&#x27;\\&#x27;</span> + pdf.find(name=<span class="hljs-string">&#x27;span&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;hidden-sm hidden-xs&#x27;</span>&#125;).string<br>                    <span class="hljs-built_in">print</span>(filename)<br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                        f.write(self.session.get(link, headers=self.headers).content)<br>                    f.close()<br>                <span class="hljs-keyword">except</span> AttributeError:<br>                    <span class="hljs-keyword">continue</span><br>            <span class="hljs-comment"># 下载所有word</span><br>            <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> resource.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;Word &#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_self&#x27;</span>&#125;):<br>                link = word[<span class="hljs-string">&#x27;href&#x27;</span>]<br>                <span class="hljs-keyword">try</span>:<br>                    filename = <span class="hljs-built_in">dir</span> + <span class="hljs-string">&#x27;\\&#x27;</span> + word.find(name=<span class="hljs-string">&#x27;span&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;hidden-sm hidden-xs&#x27;</span>&#125;).string<br>                    <span class="hljs-built_in">print</span>(filename)<br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                        f.write(self.session.get(link, headers=self.headers).content)<br>                    f.close()<br>                <span class="hljs-keyword">except</span> AttributeError:<br>                    <span class="hljs-keyword">continue</span><br>            <span class="hljs-comment"># 下载其他资源</span><br>            <span class="hljs-keyword">for</span> rar <span class="hljs-keyword">in</span> resource.find_all(name=<span class="hljs-string">&#x27;a&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;未知类型&#x27;</span>, <span class="hljs-string">&#x27;target&#x27;</span>: <span class="hljs-string">&#x27;_self&#x27;</span>&#125;):<br>                link = rar[<span class="hljs-string">&#x27;href&#x27;</span>]<br>                <span class="hljs-keyword">try</span>:<br>                    filename = <span class="hljs-built_in">dir</span> + <span class="hljs-string">&#x27;\\&#x27;</span> + rar.find(name=<span class="hljs-string">&#x27;span&#x27;</span>, attrs=&#123;<span class="hljs-string">&#x27;class&#x27;</span>: <span class="hljs-string">&#x27;hidden-sm hidden-xs&#x27;</span>&#125;).string<br>                    <span class="hljs-built_in">print</span>(filename)<br>                    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                        f.write(self.session.get(link, headers=self.headers).content)<br>                    f.close()<br>                <span class="hljs-keyword">except</span> AttributeError:<br>                    <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>(<span class="hljs-params">self</span>):</span><br>        certCode = self.get_certCode()<br>        portal_url = self.login_in(certCode)<br>        url_course, name_course = self.Course_Info(portal_url)<br>        self.download_file(url_course, name_course)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    certCode_url = <span class="hljs-string">&#x27;http://sep.ucas.ac.cn/changePic&#x27;</span> <span class="hljs-comment"># 验证码图片的地址</span><br>    post_url = <span class="hljs-string">&#x27;http://sep.ucas.ac.cn/slogin&#x27;</span>        <span class="hljs-comment"># 用户名与密码的请求地址</span><br>    logined_url = <span class="hljs-string">&#x27;https://sep.ucas.ac.cn/appStore&#x27;</span>  <span class="hljs-comment"># 登录后显示页面的地址</span><br>    crawler = Ucas_Crawler(certCode_url, post_url, logined_url)<br>    crawler.main()<br></code></pre></td></tr></table></figure><blockquote><p>源码地址：<strong>Github: </strong><a href="https://github.com/Northfourta/UCASCourserHelper">UCASCourserHelper</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
